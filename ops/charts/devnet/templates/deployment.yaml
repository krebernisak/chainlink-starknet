apiVersion: apps/v1
kind: Deployment
metadata:
  name: starknet-dev
  labels:
    release: {{ .Release.Name }}
    app: starknet-dev
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      release: {{ .Release.Name }}
      app: starknet-dev
  template:
    metadata:
      labels:
        release: {{ .Release.Name }}
        app: starknet-dev
    spec:
      volumes:
        - name: vol
          hostPath:
            path: /dumps
      containers:
      - name: {{ .Chart.Name }}
        volumeMounts:
          - name: vol
            mountPath: /dumps
{{- if eq .Values.real_node true }}
        image: "{{ .Values.repository | default "eqlabs/pathfinder"}}:{{ .Values.tag | default "v0.1.8-alpha"}}"
{{- else }}
        image: "{{ .Values.repository | default "shardlabs/starknet-devnet"}}:{{ .Values.tag | default "0.3.2"}}"
        command: [ "starknet-devnet", "--host", "0.0.0.0", "--port", {{ .Values.service.internalPort | quote}} ]
        args: ["--lite-mode", "--seed", {{ .Values.seed | quote}}, "--dump-on", "transaction", "--dump-path", "/dumps/dump.pkl"]
{{- end }}
        imagePullPolicy: IfNotPresent
{{- if eq .Values.real_node true }}
        env:
          - name: PATHFINDER_HTTP_RPC_ADDRESS
            value: "0.0.0.0:5000"
          - name: RUSTLOG
            value: "info"
          - name: PATHFINDER_ETHEREUM_API_URL
            value: {{ .Values.url_http_L1 }}
{{- else }}
        env:
          - name: PYTHONUNBUFFERED
            value: "1"
          - name: PATHFINDER_ETHEREUM_API_URL
            value: {{ .Values.url_http_L1 }}
{{- end }}
        ports:
          - name: http
            containerPort: {{ .Values.service.internalPort }}
        livenessProbe:
          httpGet:
            path: /is_alive
            port: {{ .Values.service.externalPort }}
          initialDelaySeconds: 1
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /is_alive
            port: {{ .Values.service.externalPort }}
          initialDelaySeconds: 2
          periodSeconds: 1
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "ENDPOINT=http://localhost:{{ .Values.service.internalPort }}; for i in `seq 1 5`; do wget --spider $ENDPOINT/is_alive >> /dumps/log.txt 2>&1; if [ $? -eq 0 ]; then test -f /dumps/dump.pkl; if [ $? -eq 0 ]; then wget -O- --post-data='{\"path\": \"/dumps/dump.pkl\"}' --header='Content-Type:application/json' $ENDPOINT/load >> /dumps/log.txt 2>&1; if [ $? -eq 0 ]; then break; fi; fi; fi; sleep 5; done"]
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
